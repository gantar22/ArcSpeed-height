package myproject;
import org.lwjgl.*;
import org.lwjgl.opengl.*;
import org.lwjgl.input.*;
import static org.lwjgl.opengl.GL11.*;
import java.awt.Point;
import java.awt.Rectangle;
import java.util.*;


public class app 
{
//width and height of the display area
private int width = 800;
private int height = 600;
//Time of last frame
long lastFrame = 0;
//Time since last frame in milliseconds
int delta = 0;
//last time fps was taken
long lastfps = 0;
//stable fps value
int fps = 0;
//frames played this second
int fpsIt = 0;
//color values for our rgb
float red = .5f;
float green = .0f;
float blue = 1f;
// the player entity
player myPlayer;
//the painter object
Munch myDisplay = new Munch();

	public static void main(String args[]){
	app newApp = new app();
	newApp.alpha();
	newApp.go();
	}

	public void alpha(){
		try{
		Display.setDisplayMode(new DisplayMode(width,height));
		Display.setInitialBackground(1f,1f,1f);
		Display.create();
		}catch(LWJGLException e){
			e.printStackTrace();
			System.exit(0);
		}
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		glOrtho(0,width,0,height,1,-1);
		glMatrixMode(GL_MODELVIEW);



		player myPlayer = new player(new Rectangle(100,100,25,45),"/home/gantar/Documents/maven/mygame/src/main/TexturePack/samus.png",new Rectangle(250,1,25,45));
	
		Munch myDisplay = new Munch();
		myDisplay.init();
		lastFrame = now();
	}
	
   	public long now(){
		return (Sys.getTime()*1000)/Sys.getTimerResolution();
	}

	public void go(){
		while(!Display.isCloseRequested()){
			
		logic();
			ArrayList<Entity> eList = new ArrayList<Entity>();
			eList.add(new player(new Rectangle(100,100,25,45),"/home/gantar/Documents/maven/mygame/src/main/TexturePack/samus.png",new Rectangle(250,1,25,45)););
		paint(eList);
		Display.update();
		Display.sync(60);
		
		}
		Display.destroy();

	}

	public void logic(){
		delta = dTime();
		updateFPS();	
	}
	public int dTime(){
		lastFrame = now();
		return (int) (now() - lastFrame);
	}
	public void updateFPS(){
		if(now() - lastfps > 1000){
			lastfps = now();
			fps = fpsIt;
			fpsIt = 0;

		}
		fpsIt++;
	}
	public void paint(ArrayList<Entity> eList){ 
		
		myDisplay.paintEntities(myPlayer);
		
	}
	public void testPaint(){
		int[][] boxCoords = new int[][] {
		{340 + 10,340 + 10},
		{340 + 0,340 + 10},
		{340 + 0,340 + 0},
		{340 + 10,340 + 0}
		};
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
		glColor3f(red,green,blue);
		glBegin(GL_QUADS);
		for(int i = 0; i < 4; i++){
			glVertex2f(boxCoords[i][0],boxCoords[i][1]);
		}
		glEnd();
	}

}
